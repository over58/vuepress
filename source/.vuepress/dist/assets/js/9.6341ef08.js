(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{460:function(n,t,e){"use strict";e.r(t);var a=e(42),i=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h3",{attrs:{id:"效果图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#效果图"}},[n._v("#")]),n._v(" 效果图")]),n._v(" "),e("h3",{attrs:{id:"demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[n._v("#")]),n._v(" demo")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("<template>\n  <Card dis-hover class=\"chart-item\" style=\"margin-bottom:20px\">\n    <template v-if=\"!simple\">\n      <div slot=\"title\" class=\"chart-item-title\">\n        {{ title }}\n        <span style=\"float:right\">\n          <slot name=\"extra\">\n            <template v-if=\"unit\">\n              <span class=\"desc-title\">单位</span> {{unit}} <span class='vertital-divider'>|</span>\n            </template>\n          </slot>\n        </span>\n      </div>\n      <div class=\"chart-item-header\">\n        <slot name=\"operation\"></slot>\n      </div>\n    </template>\n\n    <div ref=\"chart\" :class=\"['chart-item-content', {'simple' : simple}]\"></div>\n  </Card>\n</template>\n\n<script>\nimport Highcharts from 'highcharts'\nimport HighchartsNoData from 'highcharts/modules/no-data-to-display'\nimport HighchartsExporting from 'highcharts/modules/exporting'\nimport mockData from './mock.js'\n\nHighchartsNoData(Highcharts)\nHighchartsExporting(Highcharts)\n\nexport default {\n  name: 'ChartItem',\n  props: {\n    simple: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'line',\n      validator (val) {\n        if (['area', 'spline', 'line'].indexOf(val) > -1) {\n          return true\n        } else {\n          throw new Error('chart type must be oneof [line, spline, area]')\n        }\n      }\n    },\n    title: {\n      type: String,\n      default: ''\n    }, // 图表名字\n    extra: Object, // 关于图表的一些其他信息\n    data: {\n      type: Array,\n      required: true\n    },\n    unit: {\n      type: String,\n      default: ''\n    },\n    plotLine: {\n      type: Object,\n      default: null\n    },\n    notTimeStamp: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      chartInstance: null,\n      mockData: mockData\n    }\n  },\n  computed: {\n    // resize () {\n    //   return this.$store.state.common.resize\n    // },\n    option () {\n      return {\n        chart: {\n          type: this.type\n        },\n        title: {\n          text: this.simple ? this.title : '',\n          style: {\n            fontWeight: 'bold'\n          }\n        },\n        credits: {\n          text: 'http://nevis.sina.com.cn',\n          href: 'http://nevis.sina.com.cn'\n        },\n        legend: {\n          enabled: true,\n          lineHeight: 20,\n          maxHeight: 40\n        },\n        tooltip: {\n          xDateFormat: '%Y-%m-%d %H:%M',\n          valueDecimals: 2,\n          shared: true\n        },\n        xAxis: {\n          startOnTick: true,\n          tickmarkPlacement: 'on',\n          type: 'datetime',\n          dateTimeLabelFormats: {\n            day: '%Y/%b/%e'\n          },\n          followPointer: true,\n          crosshair: true\n        },\n        yAxis: {\n          startOnTick: true,\n          lineWidth: 1,\n          tickWidth: 1,\n          title: {\n            align: 'middle',\n            text: `值(${this.unit})`\n          },\n          plotBands: [],\n          min: this.min || null\n        },\n        plotOptions: {\n          series: {\n            lineWidth: 1,\n            marker: {\n              enabled: false\n            }\n          }\n        },\n        exporting: {\n          enabled: true,\n          buttons: {\n            contextButton: {\n              menuItems: [\n                'viewFullscreen', 'downloadPNG', 'downloadJPEG', 'downloadPDF', 'downloadSVG'\n              ]\n            }\n          },\n          filename: this.title\n        },\n        series: this.innerData\n      }\n    },\n    innerData () {\n      if (this.notTimeStamp) {\n        return this.data.map(item => {\n          return [Date.parse(item[0]), item[1]]\n        })\n      } else {\n        return this.data\n      }\n    }\n  },\n  watch: {\n    // resize () {\n    //   this.chartInstance && this.chartInstance.reflow()\n    // }\n  },\n  methods: {\n    init () {\n      Highcharts.setOptions({\n        global: {\n          useUTC: false\n        },\n        lang: {\n          loading: '加载中...',\n          shortMonths: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n          printChart: '打印图表',\n          downloadJPEG: '导出jpeg',\n          downloadPNG: '导出png',\n          downloadSVG: '导出svg',\n          downloadPDF: '导出pdf',\n          noData: '暂无数据',\n          contextButtonTitle: '导出',\n          viewFullscreen: '全屏显示',\n          viewData: '表格显示数据'\n        }\n      })\n      let option = this.option\n      if (this.plotLine) {\n        option = Object.assign(this.option, {\n          yAxis: {\n            plotLines: [\n              {\n                value: this.plotLine.value,\n                color: 'red',\n                width: 2,\n                dashStyle: 'solid',\n                label: {\n                  text: this.plotLine.text || '',\n                  align: this.plotLine.align || 'left',\n                  style: {\n                    color: 'red',\n                    fontSize: '18px'\n                  }\n                }\n              }\n            ]\n          }\n        })\n      }\n      Highcharts.chart(this.$refs.chart, option)\n    }\n  },\n  mounted () {\n    this.init()\n  },\n  beforeDestroy () {\n    this.chartInstance && this.chartInstance.destroy()\n    this.chartInstance = null\n  }\n}\n<\/script>\n\n<style lang=\"less\" scoped>\n.chart-item {\n  margin-bottom: 20px;\n  &-title {\n    font-weight: bold;\n    height: 18px;\n    line-height: 18px;\n    .vertital-divider{\n      margin: 0 5px;\n      display: inline-block;\n      width: 1px;\n      vertical-align: middle;\n      color: #e8eaec;\n      box-sizing: border-box;\n      background: #e8eaec;\n    }\n    .desc-title{\n      color: #888;\n    }\n  }\n  &-header {\n    text-align: right;\n  }\n  &-content {\n    height: 300px;\n  }\n  .simple{\n    height: 346px;\n  }\n}\n</style>\n\n")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);