(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{437:function(e,t,n){"use strict";n.r(t);var a=n(42),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h3",{attrs:{id:"loop下点击事件无效"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#loop下点击事件无效"}},[e._v("#")]),e._v(" loop下点击事件无效")]),e._v(" "),n("h4",{attrs:{id:"问题描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[e._v("#")]),e._v(" 问题描述：")]),e._v(" "),n("p",[e._v("当启用loop时，如果在swiper-slide中添加了点击事件，那么当开始下一个循环的时候，又一个短暂的时间， 点击是无效的。这样的原因大概是： 开启loop后，vue-awesome-swiper会复制几个swiper-slide,但是却没有复制相应的事件。")]),e._v(" "),n("h4",{attrs:{id:"过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[e._v("#")]),e._v(" 过程")]),e._v(" "),n("p",[e._v("找了很多，也发现了很多hack方法，一一试了下，都不太满足我的需求。最后找的这个https://blog.csdn.net/sxs1995/article/details/90648523 还不错。\n我试了之后，确实，能够解决点击失效问题。但是我的逻辑是要在点击的同时需要一个TouchEvent, 按照上面的例子，获得的是事件对象在我使用clipboard进行复制的时候，报错 “clipboard.js?f71e:32 Uncaught TypeError: Cannot read property 'hasAttribute' of null”。于是我查了文档。发现了这个。\n!["),n("a",{attrs:{href:"https://www.swiper.com.cn/api/event/226.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("lifecycle"),n("OutboundLink")],1),e._v("]\n"),n("img",{attrs:{src:"/vue-awesome-swiper%E7%9A%84%E5%9D%91/QQ20191126-173814@2x.png",alt:""}})]),e._v(" "),n("h4",{attrs:{id:"最后核心代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#最后核心代码"}},[e._v("#")]),e._v(" 最后核心代码")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("data () {\n  return {\n     swiperOption: {\n        loop: true,\n        speed: 700,\n        slidesPerView: 1,\n        autoplay: {\n          delay: 4000,\n          disableOnInteraction: false\n        },\n        on: {\n          // 推荐使用这种方式解决loop下dom失效问题，注意事件类型为tap\n          click: function (e) {\n            vm.download(e, this.realIndex)\n          }\n        }\n      }\n  }\n},\nmethods: {\n  download (e, index) {\n    console.log('操作的slide的索引',index)\n    //handleClipboard 是封装clipboard的一个函数，不必追究\n      handleClipboard('复制文本', e, {\n        showToast: false\n      })\n    }\n}\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);