(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{376:function(t,a,e){"use strict";e.r(a);var s=e(42),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"常用的几个命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用的几个命令"}},[t._v("#")]),t._v(" 常用的几个命令")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git add\ngit commit\ngit status\ngit diff \ngit branch\ngit remote\ngit pull \ngit push \ngit reset\ngit tag\n")])])]),t._v(" "),e("h3",{attrs:{id:"常见的场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见的场景"}},[t._v("#")]),t._v(" 常见的场景")]),t._v(" "),e("h4",{attrs:{id:"版本需要回退到旧版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本需要回退到旧版本"}},[t._v("#")]),t._v(" 版本需要回退到旧版本")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('1、git reset\n git reset --hard "目标版本commmit-id"\n git push origin master -f 暴力，不建议\n 适用场景： 如果想恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了，就可以用这种方法。\n\n2、git revert\n git revert的作用通过反做创建一个新的版本，这个版本的内容与我们要回退到的目标版本一样，但是HEAD指针是指向这个新生成的版本，而不是目标版本。\n git revert -n 版本号\n git commit -m 版本名\n 适用场景： 如果我们想恢复之前的某一版本（该版本不是merge类型），但是又想保留该目标版本后面的版本，记录下这整个版本变动流程，就可以用这种方法。\n')])])]),e("h4",{attrs:{id:"拉取远程分支并创建本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉取远程分支并创建本地分支"}},[t._v("#")]),t._v(" 拉取远程分支并创建本地分支")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1、git checkout -b newBranch origin/remoteBranch\n2、git fetch origin remoteBranch:newBranch\n3、git checkout -b newBranch --trace origin/remoteBranch\n")])])]),e("h4",{attrs:{id:"修改上一次commit的信息-未push到远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改上一次commit的信息-未push到远程分支"}},[t._v("#")]),t._v(" 修改上一次commit的信息，未push到远程分支")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git commit -m 'message' --amend\n")])])]),e("h4",{attrs:{id:"忽略对某个文件或者文件夹的的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#忽略对某个文件或者文件夹的的修改"}},[t._v("#")]),t._v(" 忽略对某个文件或者文件夹的的修改")]),t._v(" "),e("p",[t._v("将文件或者文件夹的名字添加到.gitignore文件")])])}),[],!1,null,null,null);a.default=r.exports}}]);