(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{393:function(r,a,t){"use strict";t.r(a);var e=t(42),n=Object(e.a)({},(function(){var r=this,a=r.$createElement,t=r._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v("var arr = [11,3,4,556,7,8,-4]\n")])])]),t("h4",{attrs:{id:"获得最大值-最小值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获得最大值-最小值"}},[r._v("#")]),r._v(" 获得最大值/最小值")]),r._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v("var a= arr.reduce((a, b) => {\n  return a > b ? a: b\n})\n")])])]),r._v(" "),t("h4",{attrs:{id:"数组去重"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组去重"}},[r._v("#")]),r._v(" 数组去重")]),r._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v("var arr1 = [1, 2, 3, 1, 1, 2, 3, 3, 4, 3, 4, 5]\nlet ret1 = arr1.reduce((a, b) => {\n  if(!a.includes(b)) {\n    a.push(b)\n  }\n  return a\n}, [])\n\n")])])]),t("h4",{attrs:{id:"实现map函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现map函数"}},[r._v("#")]),r._v(" 实现map函数")]),r._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v("Array.prototype._map = function(cb) {\n  if(typeof cb === 'function') {\n    let arr = this\n    return arr.reduce((prev, next, index, array) => {\n      prev.push(cb(next, index, array))\n      return prev\n    }, [])\n  }else{\n    throw new Error('cb' + ' is not function' )\n  }\n}\n")])])]),t("h4",{attrs:{id:"实现一个filter函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现一个filter函数"}},[r._v("#")]),r._v(" 实现一个filter函数")]),r._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v("Array.prototype._filter = function(cb) {\n  if(typeof cb === 'function') {\n    let arr = this\n    return arr.reduce((prev, next, index, array) => {\n      cb(next, index, array) && prev.push(next)\n      return prev\n    }, [])\n  }else{\n    throw new Error('cb' + ' is not function' )\n  }\n}\n")])])]),t("h4",{attrs:{id:"数组扁平化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组扁平化"}},[r._v("#")]),r._v(" 数组扁平化")]),r._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v("let arr2 = [1, 2, '3js', [4, 5, [6], [7, 8, [9, 10, 11], null, 'abc'], {age: 12}, [13, 14]], '[]'];\nfunction flatten(arr) {\n  if(Array.isArray(arr)) {\n    return arr.reduce((prev, cur) => {\n       // 如果遍历的当前项是数组，再迭代展平\n      return Array.isArray(cur) ? prev.concat(flatten(cur)) : prev.concat(cur)\n    }, [])\n  } else {\n    throw new Error(arr + ' is not array')\n  }\n}\n")])])]),t("h4",{attrs:{id:"统计字符串中每个字符出现的次数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#统计字符串中每个字符出现的次数"}},[r._v("#")]),r._v(" 统计字符串中每个字符出现的次数")]),r._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v("const str = '9kFZTQLbUWOjurz9IKRdeg28rYxULHWDUrIHxCY6tnHleoJ'\n\nvar ret3 = Array.from(str).reduce((accumulator, current) => {\n  current in accumulator ? accumulator[current]++ : accumulator[current] = 1\n  return accumulator\n}, {})\n")])])]),t("h4",{attrs:{id:"过滤满足多个条件的数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#过滤满足多个条件的数组"}},[r._v("#")]),r._v(" 过滤满足多个条件的数组")]),r._v(" "),t("blockquote",[t("p",[r._v("将过滤函数作为数组进行调用， 初始值为原数据数组")])]),r._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v("const filter1 = (arr) => arr.filter(item => item.name.length === 3)\nconst filter2 = (arr) => arr.filter(item => item.age > 26)\nvar ret5 = [filter1, filter2].reduce((accumulator, fn) => fn(accumulator), arr4)\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);