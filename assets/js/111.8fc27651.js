(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{463:function(e,s,a){"use strict";a.r(s);var n=a(42),t=Object(n.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install webpack webpack-cli webpack-dev-server -D\n")])])]),a("h3",{attrs:{id:"_1-基本配置-webpack-config-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本配置-webpack-config-js"}},[e._v("#")]),e._v(" 1.基本配置 webpack.config.js")]),e._v(" "),a("p",[e._v("当在项目中直接运行webpack时，默认读取webpack.config.js中的配置，等同于运行 webpack webpack.config.js")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const path = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin')  //自动生成html\n\nmodule.exports = {\n  mode: 'development', // 可选development|production\n  entry: path.join(__dirname, 'src', 'main.js'),\n  watch: true,\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    publicPath: '', // js 路径为public + path + filename\n    filename: \"main.js\",\n    chunkFilename: '[name].js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        // css-loader 导入css\n        // style-loader 将css插入到style标签中\n        use: ['style-loader', 'css-loader']\n      },\n      {\n        test: /\\.less$/, \n        use: ['style-loader', 'css-loader', 'less-loader']\n      },\n      {\n        test: /\\.html$/,  // 导入 html\n        use: ['html-loader']\n      }\n    ]\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      filename: 'index.html',\n      template: 'index.html'\n    })\n  ],\n  devtool: 'source-map',\n  devServer: {\n    contentBase: path.join('/dist/'),\n    inline: true,\n    host: '127.0.0.1',\n    port: 3000,\n  }\n};\n")])])]),e._v(" "),a("h3",{attrs:{id:"_2-html处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-html处理"}},[e._v("#")]),e._v(" 2.html处理")]),e._v(" "),a("p",[e._v("html-webpack-plugin: 可以指定模版生成html,并可以进行去除双引号、折叠空白符号之类的操作")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const HtmlWebpackPlugin = require('html-webpack-plugin')\n\nplugins: [\n    new HtmlWebpackPlugin({\n      template: './src/index.html',\n      filename: 'index.html',\n      minify: {\n        removeAttributeQuotes: true,\n        collapseInlineTagWhitespace: true\n      },\n      hash: true\n    })\n]\n")])])]),a("h3",{attrs:{id:"_3-样式处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-样式处理"}},[e._v("#")]),e._v(" 3.样式处理")]),e._v(" "),a("h4",{attrs:{id:"_3-1基本设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1基本设置"}},[e._v("#")]),e._v(" 3.1基本设置")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [{\n          // 插入到style中\n          loader: 'style-loader',\n          options: {\n            insertAt: 'bottom'\n          }\n        }, 'css-loader']\n      },\n      {\n        test: /\\.less$/,\n        use: ['style-loader', 'css-loader', 'less-loader']\n      }\n    ]\n}\n")])])]),a("h4",{attrs:{id:"_3-2-将所有的样式抽离到一个css文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-将所有的样式抽离到一个css文件"}},[e._v("#")]),e._v(" 3.2 将所有的样式抽离到一个css文件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const MiniCssExtractPlugin= require('mini-css-extract-plugin')\n\nmodule: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          'css-loader']\n      },\n      {\n        test: /\\.less$/,\n        use: [MiniCssExtractPlugin.loader, 'css-loader', 'less-loader']\n      }\n    ]\n}\n")])])]),a("h4",{attrs:{id:"_3-3-将样式自动添加前缀"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-将样式自动添加前缀"}},[e._v("#")]),e._v(" 3.3 将样式自动添加前缀")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cnpm install postcss-loader autoprefixer\n\n// webpack.config.js\nmodule: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          'css-loader', 'postcss-loader']\n      },\n      {\n        test: /\\.less$/,\n        use: [MiniCssExtractPlugin.loader, 'css-loader', 'postcss-loader', 'less-loader']\n      }\n    ]\n}\n\n// postcss.config.js\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n")])])]),a("p",[e._v("or")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var postcssLoader = {\n    loader: 'postcss-loader',\n    options: {\n        plugins: (loader) => [\n            require('autoprefixer')({\n                browsers: [\n                    // 加这个后可以出现额外的兼容性前缀\n                    \"> 0.01%\"\n                ]\n            })\n        ],\n        sourceMap: true\n    }\n}\n")])])]),a("h4",{attrs:{id:"_3-4-production-压缩css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-production-压缩css"}},[e._v("#")]),e._v(" 3.4 production 压缩css")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin');\n\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new OptimizeCSSAssetsPlugin()\n    ]\n  },\n  mode: 'production', // production | development\n}\n")])])]),a("h4",{attrs:{id:"_3-5-production-压缩js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-production-压缩js"}},[e._v("#")]),e._v(" 3.5 production 压缩js")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cnpm install uglifyjs-webpack-plugin -D \nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin'); //压缩js\nmodule.exports = {\n  optimization: { //优化项\n    minimizer: [\n      new UglifyWebpackplugin({\n        test: /\\.js(\\?.*)?$/i,\n        cache: true,\n        // 是否并行处理\n        parallel: true,\n        sourceMap: true\n      })\n    ]\n  }\n}\n")])])]),a("h3",{attrs:{id:"_4-转换es6语法以及校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-转换es6语法以及校验"}},[e._v("#")]),e._v(" 4. 转换es6语法以及校验")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cnpm install babel-loader @babel/core @babel/preset-env -D\n\nmodule.exports = {\n    entry: [\"@babel/polyfill\", \"./src/main.js\"],\n    module:[\n    {\n        test: /\\.js$/,\n        include: path.resolve(__dirname, 'src'),\n        exclude: /node_modules/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: [\n              '@babel/preset-env'\n            ],\n            plugins: [\n              \"@babel/plugin-proposal-class-properties\",\n              \"@babel/plugin-transform-runtime\"\n              //根据自己的需求自行添加\n            ]\n          }\n        }\n    },\n    {\n        test: /\\.js$/,\n        use: {\n            loader: 'eslint-loader',\n            options: {\n                enfore: 'pre'\n            }\n        }\n    }\n]\n}\n\n")])])]),a("h3",{attrs:{id:"_5-全局变量引入的问题-以jquery为例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-全局变量引入的问题-以jquery为例"}},[e._v("#")]),e._v(" 5. 全局变量引入的问题(以jquery为例)")]),e._v(" "),a("ul",[a("li",[e._v("全局loader  expose-loader")]),e._v(" "),a("li",[e._v("前置loder")]),e._v(" "),a("li",[e._v("普通loader")]),e._v(" "),a("li",[e._v("内联loader")]),e._v(" "),a("li",[e._v("后置loader  postcss-loader")])]),e._v(" "),a("h4",{attrs:{id:"_5-1-import-from-jquery-时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-import-from-jquery-时"}},[e._v("#")]),e._v(" 5.1 import $ from 'jquery' 时")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module = [\n    test: require.resove('jquery'),\n    use:'expose-loader?$'\n]\n")])])]),a("h4",{attrs:{id:"_5-2-将-注入到每一个模块中去-在模块中可以直接使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-将-注入到每一个模块中去-在模块中可以直接使用"}},[e._v("#")]),e._v(" 5.2 将$注入到每一个模块中去，在模块中可以直接使用$")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const webpack = require('webpack')\nplugins: [\n    new webpack.ProvidePlugin({\n      $: 'jquery'\n    })\n],\n")])])]),a("h3",{attrs:{id:"_6-处理图片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-处理图片"}},[e._v("#")]),e._v(" 6.处理图片")]),e._v(" "),a("h4",{attrs:{id:"_6-1-处理css-js中的图片引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-处理css-js中的图片引用"}},[e._v("#")]),e._v(" 6.1 处理css，js中的图片引用")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module: [\n     {\n        test: /.(jpg|jpeg|png|gif|svg)$/,\n        use:'file-loader'\n    }\n]\n")])])]),a("h4",{attrs:{id:"_6-2-处理html中引入的图片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-处理html中引入的图片"}},[e._v("#")]),e._v(" 6.2 处理html中引入的图片")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module: [\n     {\n        test: /.html$/,\n        use:'html-withimg-loader'\n    }\n]\n")])])]),a("h4",{attrs:{id:"_6-3-将小的图片转成base64-减少http请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-将小的图片转成base64-减少http请求"}},[e._v("#")]),e._v(" 6.3 将小的图片转成base64，减少http请求")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module: [\n     {\n        loader: 'url-loader',\n        options: {\n          // 小于50k的图片转成base64\n          limit: 50 * 1024, // 50k\n          name: '[hash:8].[ext]',\n          outputPath: './images'\n        }\n    }\n]\n")])])]),a("h3",{attrs:{id:"_7-打包文件分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-打包文件分类"}},[e._v("#")]),e._v(" 7.打包文件分类")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//img\nmodule: [\n     {\n        loader: 'url-loader',\n        options: {\n          // 小于50k的图片转成base64\n          limit: 50 * 1024, // 50k\n          name: '[hash:8].[ext]',\n          outputPath: '/images/',   //图片打包到images下\n          //打包后为图片的引入路径前添加url前缀，可以在需要将图片使用cdn的时候用（和其他文件的publicPath不同）\n          //publicPath: 'http://www.xxxcdn.com/'  \n        }\n    }\n]\n//css\nplugins: [\n  new MiniCss({\n      filename: 'css/main.css' // 会将css文件打包为  dist/css/main.css\n    }),\n]\n\n// js\noutput: {\n  filename: 'js/main.js'\n}\n")])])])])}),[],!1,null,null,null);s.default=t.exports}}]);